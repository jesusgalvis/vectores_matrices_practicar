 rand()% ((999+1)-100);
		
	//	printf("%d ",a[i]);
	}
		
//-------------------2. Cargar el vector B con números aleatorios PARES entre 100 y 999.----------------------
//printf("\n");

	srand(time(NULL));
	
	for(i=0;i<p1;i++){
		
		do{
			
		b[i] = 100 + rand()% ((999+1)-100);
		
		}while(b[i]%2!=0);
		
	//	printf("%d ",b[i]);
	}	
//-------------------3. Cargar el vector C con números aleatorios IMPARES entre 100 y 999.-------------------
//	printf("\n");

	srand(time(NULL));
	
	
	for(i=0;i<p1;i++){
		
		do{
		c[i] = 100 + rand()% ((999+1)-100);
		}while(c[i]%2==0);
		
	//	printf("%d ",c[i]);
	}

//-------------------4. Cargar la Matriz M1 con números aleatorios entre 100 y 999.-------------------
//	printf("\n");
	

	srand(time(NULL));
	
	
	for(i=0;i<p2;i++){
		for(j=0;j<p2;j++){
			
		m1[i][j] = 100 + rand()% ((999+1)-100);
	
	//	printf("%d ",m1[i][j]);
		}
	//	printf("\n");
	}
		
//-------------------5. Cargar la Matriz M2 con números aleatorios entre 1000 y 9999.-------------------
	//printf("\n");
	

	srand(time(NULL));
	
	
	for(i=0;i<p2;i++){
		for(j=0;j<p2;j++){
			
		m2[i][j] = 1000 + rand()% ((9999+1)-1000);
	
//		printf("%d ",m2[i][j]);
		}
//		printf("\n");
	}		
		
//-------------------6. Imprimir en 3 columnas los vectores A, B, C.-------------------
	
		printf("6.--------------------------------\n\n===== ===== =====\n  A     B     C\n===== ===== =====");
	for(i=0;i<p1;i++){	
		printf("\n %d   %d   %d",a[i],b[i],c[i]);
	}
/*=================================================
//___________________________________________________________________________________	
	printf("\n=====\n  A\n=====\n");
	for(i=0;i<p1;i++){	
		printf(" %d \n",a[i]);
	}
		

	printf("=====\n  B\n=====");
	for(i=0;i<p1;i++){	
		printf("\n %d ",b[i]);
	}
	

	printf("\n=====\n  C\n=====");
	for(i=0;i<p1;i++){	
		printf("\n %d ",c[i]);
	}
=================================================*/
	
//-------------------7. Imprimir las matrices M1 y M2.-------------------

	printf("\n===== ===== =====\n\n7.--------------------------------\n\n");
	printf("m1: \n\n");
	for(i=0;i<p2;i++){
		for(j=0;j<p2;j++){
			
		printf("%d ",m1[i][j]);
		}
		printf("\n");
	}
		
	printf("\n");

	printf("m2: \n\n");

	for(i=0;i<p2;i++){
		for(j=0;j<p2;j++){
		printf("%d ",m2[i][j]);
		}
		printf("\n");
	}		
	
//-------------------8. Imprimir en 2 columnas: el vector A y el vector A al revés.-------------------
	
printf("\n8.--------------------------------\n\n=====\n  A\n=====\n");
	for(i=0;i<p1;i++){	
		printf(" \n%d  ",a[i]);
	}
printf("\n\nal reves\n\n");
	for(i=p1-1;i>0;i--){	
		printf("%d \n",a[i]);
	}	
			
	
/*-------------------------------------------------------------------------------------------------

9. Crear un vector D de 60 posiciones donde se almacenen los vectores B y C de forma
intercalada, es decir, un valor de B, un valor de C y así sucesivamente. Imprimir el
vector D de forma tal que se visualicen los primeros 10 valores, al presionar una tecla
los siguientes 10 y así sucesivamente.

---------------------------------------------------------------------------------------------------*/
printf("\n9.--------------------------------\n",a[i]);
int aux,k,cont1=0,cont2=0,salir;


j=0;
k=0;

for(i=0;i<p3;i++){
	d[i]=i;
	
	if(d[i]%2==0){
			cont1++;
		//	printf("\ntomo b |%d|",cont1);
		//	printf(" %d ",d[i]);
		
			for(j;j<p1;j++){
				d[i]=b[j];
				printf("\n%d ",d[i]);break;	
			}
	j++;


	}else{	
			cont1++;
	//		printf("\ntomo c |%d|",cont2);
	//		printf(" %d ",d[i]);
	
			for(k;k<p1;k++){
					d[i]=c[k];
					printf("\n%d ",d[i]);break;	
			}
	k++;	
	
		if(cont1==10){
			printf("\n\n");
			system("pause");
			cont1=0;
		}
	}

}

/*10. Ordenar de menor a mayor el vector A. Imprimir el vector desordenado y ordenado en
2 columnas.
---------------------------------------------------------------------------------------------------*/
printf("\n10.--------------------------------\n\ndesorden \n\n");

for(i=0;i<p1;i++){
	printf("%d ",a[i]);
}

printf("\n");

for(i=0;i<p1;i++){
	
	for(j=0;j<p1;j++){
		if(a[j]>a[j+1]){
			aux=a[j];
			a[j]=a[j+1];
			a[j+1]=aux;
		}
				
	
	}	

}
printf("\norden\n\n");
for(i=0;i<p1;i++){
	printf("%d ",a[i]);
}

/*11. Crear un vector E de 30 posiciones, que almacene en sus primeras 15 posiciones, los
últimos 15 valores de B y en sus últimas 15 posiciones, los primeros 15 valores de C.
Imprimir el vector.
---------------------------------------------------------------------------------------------------*/

printf("\n11.--------------------------------\n");

int e[p1];

for(i=0;i<p1;i++){
	e[i]=i;
	aux=i;
//	printf("%d ",e[i]);


		for(i=15;i<p1;i++){
			e[i]=b[i];
					printf("\n%d ",e[i]);
		}
		
		for(j=0;j<15;j++){
			e[j]=c[j];
					printf("\n%d ",e[j]);
		}
		
}	
/*12. Crear un vector F de máximo 30 posiciones, donde solo se almacenen los valores pares
de A. Imprimir el vector F. 
---------------------------------------------------------------------------------------------------*/
printf("\n\n12.--------------------------------\n\n");

int f[p1];

for(i=0;i<p1;i++){
	if(a[i]%2==0){
		f[i]=a[i];
	}else{
		f[i]=0;
	}
}
	
	for(i=0;i<p1;i++){
		
		if(f[i]!=0){
			printf("%d\n",f[i]);
		}
	
	
	}
		
		
/*13. Crear un vector G de 30 posiciones, donde se almacene la concatenación valor por
valor de los vectores B y C. Por ejemplo: B[0]=224 y C[0]=331, la posición
G[0]=224331.
---------------------------------------------------------------------------------------------------*/
printf("\n13.--------------------------------\n\n");

int g[p1];
for(i=0;i<p1;i++){
	g[i]=(b[i]*1000)+c[i];
	printf("%d\n",g[i]);
}

//14. Almacenar en una matriz M3 la matriz transpuesta de M1. Imprimir M1 y M3.----------------------------------

int m3[p2][p2];

printf("\n14.--------------------------------\n\nm1\n\n");

for(i=0;i<p2;i++){
	for(j=0;j<p2;j++){
		printf("%d ",m1[i][j]);
	}
	printf("\n");
}

printf("\n\nm2 Transpuesta de m1\n\n");

for(j=0;j<p2;j++){
	for(i=0;i<p2;i++){
		
		m3[i][j]=m1[i][j];
		printf("%d ",m3[i][j]);
		
	}
	printf("\n");
}
	
//15. Calcular el porcentaje de números pares e impares de la matriz M2.---------------

cont2=0;
int acum=0,acum2=0,cont=0;

for(i=0;i<p2;i++){
	for(j=0;j<p2;j++){
		
		if(m2[i][j]%2==0){
			acum = acum+m2[i][j];
			cont++;
					
		}else{
			acum2 = acum2+m2[i][j];
			cont2++;
		}
	}
	
}


	printf("pares %d / %d = %d",acum/cont);
	
	printf("impares %d / %d = %d",acum2/cont2);
	printf("\n");




































	return 0;
	
}


